output:
  save: True

data:
  train: './data/train.csv'
  test: './data/test.csv'
  target: 'Survived'
  train_size: 0.8

model:
  random_state: 0
  n_jobs: -1
  strategy: 'model'
  KFold_folds: 4
  out_columns: [ 'Pclass', 'Age', 'SibSp', 'Parch', 'Family_Members', 'Fare',
                 'Gender', 'Surname_Enc', 'Origin', 'Is_Alone', 'Fare_Log', 'Age_Bins',
                 'Pcl_Emb_Enc', 'Pcl_Sex_Enc', 'Sex_Emb_Enc']
  drop_columns: ['Ticket', 'PassengerId']
  f_ext:
    age_bins: [4, 15, 35, 50]
  impute:
    type: 'iterative'
    max_iter: 300
#    k_neighbors: 20
    params:
      by_cols:
        - by: ['Gender', 'Origin', 'Pclass']
          target: 'Age'
          func: 'median'
        - by: ['Gender', 'Origin', 'Pclass']
          target: 'Fare'
          func: 'median'
  anomaly:
    type: 'lof'
    params:
      n_neighbors: 2
  cluster:
    type: 'DBSCAN'
    params:
      eps: 2
  model:
    type: 'RF'
    params:
      n_estimators: 300
#      criterion: 'entropy'